/*
 * Copyright 2017 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import androidx.build.PlatformIdentifier
import androidx.build.Publish
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
}

androidXMultiplatform {
    android()
    jvm()

    defaultPlatform(PlatformIdentifier.JVM)

    sourceSets {
        commmonMain {
            dependencies {
                api(libs.kotlinStdlib)
            }
        }

        // Android is compiled separately, and does not reference the Common sources.
        // The classed defined in commonMain will therefore be resolved from the
        // Android SDK instead (which is the whole purpose of this package). 
        androidMain {
            dependencies {
                api(libs.kotlinStdlib)
            }
        }

        jvmMain {
            dependsOn(commonMain)
            dependencies {
                api(libs.kotlinStdlib)
            }
        }
    }
}

android {
    namespace "androidx.stubs"
}

androidx {
    name = "Android Stubs"
    publish = Publish.SNAPSHOT_AND_RELEASE
    inceptionYear = "2023"
    description = "Stubs for non-Android platforms"
}

var p = project

task compilations {
    doLast {
        println("!!!")
        println("== Source sets ==")
        p.kotlin.sourceSets.all { sourceSet ->
            println(sourceSet)
            println("  source directories:")
            sourceSet.kotlin.srcDirs.each { srcDir ->
                println("    " + srcDir)
            }
            println("  depends on:")
            sourceSet.dependsOn.each { otherSourceSet ->
                println("    " + otherSourceSet)
            }
        }
        println("== Targets ==")
        project.kotlin.targets.all { target ->
            println(target)
            target.compilations.all { compilation ->
                println("  " + compilation)
                println("    " + compilation.defaultSourceSet)
                println("      " + compilation.defaultSourceSet.kotlin)
                println("        source directories:")
                compilation.defaultSourceSet.kotlin.srcDirs.each { srcDir ->
                    println("          " + srcDir)
                }
                println("        depends on:")
                compilation.defaultSourceSet.dependsOn.each { otherSourceSet ->
                    println("          " + otherSourceSet)
                }
                println("        dependency files:")
                try {
                    compilation.compileDependencyFiles.each { dependencyFile ->
                        println("          " + dependencyFile)
                    }
                } catch(Exception e) {
                    println("              Resolution failed.")
                }
            }
        }
        println("???")
    }
}